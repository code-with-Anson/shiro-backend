<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shiro.backend.mapper.BillMonthStatisticsMapper">

    <!-- 更新或插入月度统计数据 -->
    <update id="updateStatisticsForMonth">
        INSERT INTO bill_month_statistics (user_id, year, month, total_expense, total_income,
                                           category_details, expense_category_details, income_category_details,
                                           bill_count, created_at, updated_at)
        WITH expense_data AS (SELECT c.name        as category_name,
                                     SUM(b.amount) as total_amount
                              FROM bills b
                                       LEFT JOIN category c ON b.category_id = c.id
                              WHERE b.userid = #{userId}
                                AND YEAR(b.date) = #{year}
                                AND MONTH(b.date) = #{month}
                                AND b.type = 0
                                AND b.is_deleted = 0
                              GROUP BY c.name),
             expense_summary AS (SELECT SUM(total_amount)                                              as total_expense,
                                        JSON_OBJECTAGG(IFNULL(category_name, 'unknown'), total_amount) as expense_details,
                                        COUNT(*)                                                       as expense_count
                                 FROM expense_data),
             income_data AS (SELECT c.name        as category_name,
                                    SUM(b.amount) as total_amount
                             FROM bills b
                                      LEFT JOIN category c ON b.category_id = c.id
                             WHERE b.userid = #{userId}
                               AND YEAR(b.date) = #{year}
                               AND MONTH(b.date) = #{month}
                               AND b.type = 1
                               AND b.is_deleted = 0
                             GROUP BY c.name),
             income_summary AS (SELECT SUM(total_amount)                                              as total_income,
                                       JSON_OBJECTAGG(IFNULL(category_name, 'unknown'), total_amount) as income_details,
                                       COUNT(*)                                                       as income_count
                                FROM income_data),
             all_data AS (SELECT c.name        as category_name,
                                 SUM(b.amount) as total_amount
                          FROM bills b
                                   LEFT JOIN category c ON b.category_id = c.id
                          WHERE b.userid = #{userId}
                            AND YEAR(b.date) = #{year}
                            AND MONTH(b.date) = #{month}
                            AND b.is_deleted = 0
                          GROUP BY c.name),
             all_summary AS (SELECT JSON_OBJECTAGG(IFNULL(category_name, 'unknown'), total_amount) as category_details,
                                    COUNT(*)                                                       as category_count
                             FROM all_data),
             bill_count_summary AS (SELECT COUNT(*) as bill_count
                                    FROM bills b
                                    WHERE b.userid = #{userId}
                                      AND YEAR(b.date) = #{year}
                                      AND MONTH(b.date) = #{month}
                                      AND b.is_deleted = 0)
        SELECT #{userId},
               #{year},
               #{month},
               IFNULL((SELECT total_expense FROM expense_summary), 0),
               IFNULL((SELECT total_income FROM income_summary), 0),
               IFNULL((SELECT category_details FROM all_summary), '{}'),
               IFNULL((SELECT expense_details FROM expense_summary), '{}'),
               IFNULL((SELECT income_details FROM income_summary), '{}'),
               IFNULL((SELECT bill_count FROM bill_count_summary), 0),
               NOW(),
               NOW()
        ON DUPLICATE KEY UPDATE total_expense            = IFNULL((SELECT total_expense FROM expense_summary), 0),
                                total_income             = IFNULL((SELECT total_income FROM income_summary), 0),
                                category_details         = IFNULL((SELECT category_details FROM all_summary), '{}'),
                                expense_category_details = IFNULL((SELECT expense_details FROM expense_summary), '{}'),
                                income_category_details  = IFNULL((SELECT income_details FROM income_summary), '{}'),
                                bill_count               = IFNULL((SELECT bill_count FROM bill_count_summary), 0),
                                updated_at               = NOW()
    </update>

</mapper>